---
// src/layouts/ReportLayout.astro
import { type CollectionEntry } from 'astro:content';

interface Props {
  entry: CollectionEntry<'reports'>;
}
const { entry } = Astro.props;
const items = entry.data.data; // 获取情报条目数组

// 动态生成所有不重复的 source，用于创建 Tab 按钮
const sources = ['All', ...new Set(items.map(item => item.source))];
const collapseThreshold = 280; // 内容超过280个字符则折叠
---
<html lang="zh-CN">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{entry.data.title}</title>
    <link rel="stylesheet" href="/assets/style.css">
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>N8N Driven Content Hub</h1>
            <p>A curated feed from today's top sources.</p>
            <a href="https://github.com/Rarestq/n8n-driven-content-hub" class="github-link" target="_blank" rel="noopener noreferrer">
                <svg viewBox="0 0 24 24" fill="currentColor"><path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.91 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"></path></svg>
                <span>View on GitHub</span>
            </a>
        </div>
        <div class="controls-container">
            <div class="tabs-container">
                {sources.map(source => (
                    <button class="tab-btn" data-source={source}>{source}</button>
                ))}
            </div>
            <div class="search-container">
                <input type="search" id="search-box" placeholder="Search titles and content...">
            </div>
        </div>
        <div id="feed-container">
            {items.map(item => {
                const formattedDate = new Date(item.publishDate).toISOString().split('T')[0];
                const contentLength = item.content ? item.content.length : 0;
                return (
                    <div class="item-card" data-source={item.source}>
                        <h2><a href={item.link} target="_blank" rel="noopener noreferrer">{item.title}</a></h2>
                        
                        {item.content && contentLength > collapseThreshold && (
                            <div class="content collapsible">
                                <p class="preview-text">{item.content.substring(0, collapseThreshold)}...</p>
                                <div class="hidden-content">
                                    <p>{item.content}</p>
                                </div>
                                <button class="toggle-content-btn">Read more...</button>
                            </div>
                        )}

                        {item.content && contentLength <= collapseThreshold && (
                            <div class="content"><p>{item.content}</p></div>
                        )}

                        <div class="metadata">
                            <span class={`source source-${item.source}`}>{item.source}</span>
                            {item.points > 0 && <span>⭐ {item.points} points</span>}
                            <span>📅 {formattedDate}</span>
                        </div>
                    </div>
                );
            })}
        </div>
    </div>
    <script is:raw src="/assets/main.js"></script>
</body>
</html>